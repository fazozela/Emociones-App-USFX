{"ast":null,"code":"import _asyncToGenerator from \"/Users/fazozela/Desktop/Tesis Ciencias/PrototipoFinal/EmocionesApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../faceApiService/face-api.service\";\nexport class VideoService {\n  constructor(faceApiService) {\n    var _this = this;\n\n    this.faceApiService = faceApiService;\n    this.dataValues = [];\n\n    this.getLandMark = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (videoElement) {\n        const {\n          globalFace\n        } = _this.faceApiService;\n        const {\n          videoWidth,\n          videoHeight\n        } = videoElement.nativeElement;\n        const displaySize = {\n          width: videoWidth,\n          height: videoHeight\n        }; // console.log(displaySize);\n\n        const detectionsFaces = yield globalFace.detectAllFaces(videoElement.nativeElement) // .withFaceLandmarks()\n        .withFaceExpressions(); //console.log(detectionsFaces);\n\n        _this.dataValues = detectionsFaces;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n\n}\n\nVideoService.ɵfac = function VideoService_Factory(t) {\n  return new (t || VideoService)(i0.ɵɵinject(i1.FaceApiService));\n};\n\nVideoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: VideoService,\n  factory: VideoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/fazozela/Desktop/Tesis Ciencias/PrototipoFinal/EmocionesApp/src/app/services/videoService/video.service.ts"],"names":["i0","i1","VideoService","constructor","faceApiService","dataValues","getLandMark","videoElement","globalFace","videoWidth","videoHeight","nativeElement","displaySize","width","height","detectionsFaces","detectAllFaces","withFaceExpressions","ɵfac","VideoService_Factory","t","ɵɵinject","FaceApiService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oCAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AAAA;;AACxB,SAAKA,cAAL,GAAsBA,cAAtB;AACA,SAAKC,UAAL,GAAkB,EAAlB;;AACA,SAAKC,WAAL;AAAA,mCAAmB,WAAOC,YAAP,EAAwB;AACvC,cAAM;AAAEC,UAAAA;AAAF,YAAiB,KAAI,CAACJ,cAA5B;AACA,cAAM;AAAEK,UAAAA,UAAF;AAAcC,UAAAA;AAAd,YAA8BH,YAAY,CAACI,aAAjD;AACA,cAAMC,WAAW,GAAG;AAAEC,UAAAA,KAAK,EAAEJ,UAAT;AAAqBK,UAAAA,MAAM,EAAEJ;AAA7B,SAApB,CAHuC,CAIvC;;AACA,cAAMK,eAAe,SAASP,UAAU,CAACQ,cAAX,CAA0BT,YAAY,CAACI,aAAvC,EAC1B;AAD0B,SAEzBM,mBAFyB,EAA9B,CALuC,CAQvC;;AACA,QAAA,KAAI,CAACZ,UAAL,GAAkBU,eAAlB;AACH,OAVD;;AAAA;AAAA;AAAA;AAAA;AAWH;;AAfqB;;AAiB1Bb,YAAY,CAACgB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIlB,YAAV,EAAwBF,EAAE,CAACqB,QAAH,CAAYpB,EAAE,CAACqB,cAAf,CAAxB,CAAP;AAAiE,CAAxH;;AACApB,YAAY,CAACqB,KAAb,GAAqB,aAAcvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEvB,YAAT;AAAuBwB,EAAAA,OAAO,EAAExB,YAAY,CAACgB,IAA7C;AAAmDS,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"../faceApiService/face-api.service\";\nexport class VideoService {\n    constructor(faceApiService) {\n        this.faceApiService = faceApiService;\n        this.dataValues = [];\n        this.getLandMark = async (videoElement) => {\n            const { globalFace } = this.faceApiService;\n            const { videoWidth, videoHeight } = videoElement.nativeElement;\n            const displaySize = { width: videoWidth, height: videoHeight };\n            // console.log(displaySize);\n            const detectionsFaces = await globalFace.detectAllFaces(videoElement.nativeElement)\n                // .withFaceLandmarks()\n                .withFaceExpressions();\n            //console.log(detectionsFaces);\n            this.dataValues = detectionsFaces;\n        };\n    }\n}\nVideoService.ɵfac = function VideoService_Factory(t) { return new (t || VideoService)(i0.ɵɵinject(i1.FaceApiService)); };\nVideoService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: VideoService, factory: VideoService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}