{"ast":null,"code":"import _asyncToGenerator from \"/Users/fazozela/Desktop/Tesis Ciencias/PrototipoFinal/EmocionesApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input, ViewChild } from '@angular/core';\nlet VideoComponent = class VideoComponent {\n  constructor(renderer2, elementRef, faceApiService, videoService) {\n    var _this = this;\n\n    this.renderer2 = renderer2;\n    this.elementRef = elementRef;\n    this.faceApiService = faceApiService;\n    this.videoService = videoService;\n    this.modelsReady = false;\n    this.listEvents = [];\n\n    this.checkFace = () => {\n      setInterval( /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this.videoService.getLandMark(_this.videoTest);\n      }), 100);\n    };\n  }\n\n  ngOnInit() {\n    this.listenerEvents();\n  }\n\n  ngOnDestroy() {\n    this.listEvents.forEach(event => event.unsubscribe());\n  }\n\n  listenerEvents() {\n    const observer1$ = this.faceApiService.cbModels.subscribe(res => {\n      this.modelsReady = true;\n      this.checkFace();\n    });\n    const observer2$ = this.videoService.cbAi.subscribe(({\n      resizeDetections,\n      displaySize,\n      expressions,\n      eyes\n    }) => {});\n    this.listEvents = [observer1$, observer2$];\n  }\n\n  loadedMetaData() {\n    var _a;\n\n    (_a = this.videoTest) === null || _a === void 0 ? void 0 : _a.nativeElement.play();\n  }\n\n  listenerPlay() {\n    var _a;\n\n    const {\n      globalFace\n    } = this.faceApiService;\n    this.overCanvas = globalFace.createCanvasFromMedia((_a = this.videoTest) === null || _a === void 0 ? void 0 : _a.nativeElement);\n    this.renderer2.setProperty(this.overCanvas, 'id', 'new-canvas-over ');\n    this.renderer2.setStyle(this.overCanvas, 'id', 'new-canvas-over ');\n    this.renderer2.appendChild(this.elementRef.nativeElement, this.overCanvas);\n  }\n\n  playVideo() {\n    console.log(\"************ Play Video ************\");\n    const myVideo = document.getElementById(\"videoTest\");\n\n    if (myVideo.paused) {\n      myVideo.play();\n    } else {\n      myVideo.pause();\n    }\n  }\n\n};\n\n__decorate([ViewChild('videoTest')], VideoComponent.prototype, \"videoTest\", void 0);\n\n__decorate([Input], VideoComponent.prototype, \"stream\", void 0);\n\n__decorate([Input()], VideoComponent.prototype, \"width\", void 0);\n\n__decorate([Input()], VideoComponent.prototype, \"height\", void 0);\n\nVideoComponent = __decorate([Component({\n  selector: 'app-video',\n  templateUrl: './video.component.html'\n})], VideoComponent);\nexport { VideoComponent };","map":{"version":3,"sources":["/Users/fazozela/Desktop/Tesis Ciencias/PrototipoFinal/EmocionesApp/src/app/video/video.component.ts"],"names":["__decorate","Component","Input","ViewChild","VideoComponent","constructor","renderer2","elementRef","faceApiService","videoService","modelsReady","listEvents","checkFace","setInterval","getLandMark","videoTest","ngOnInit","listenerEvents","ngOnDestroy","forEach","event","unsubscribe","observer1$","cbModels","subscribe","res","observer2$","cbAi","resizeDetections","displaySize","expressions","eyes","loadedMetaData","_a","nativeElement","play","listenerPlay","globalFace","overCanvas","createCanvasFromMedia","setProperty","setStyle","appendChild","playVideo","console","log","myVideo","document","getElementById","paused","pause","prototype","selector","templateUrl"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component, Input, ViewChild } from '@angular/core';\nlet VideoComponent = class VideoComponent {\n    constructor(renderer2, elementRef, faceApiService, videoService) {\n        this.renderer2 = renderer2;\n        this.elementRef = elementRef;\n        this.faceApiService = faceApiService;\n        this.videoService = videoService;\n        this.modelsReady = false;\n        this.listEvents = [];\n        this.checkFace = () => {\n            setInterval(async () => {\n                await this.videoService.getLandMark(this.videoTest);\n            }, 100);\n        };\n    }\n    ngOnInit() {\n        this.listenerEvents();\n    }\n    ngOnDestroy() {\n        this.listEvents.forEach(event => event.unsubscribe());\n    }\n    listenerEvents() {\n        const observer1$ = this.faceApiService.cbModels.subscribe(res => {\n            this.modelsReady = true;\n            this.checkFace();\n        });\n        const observer2$ = this.videoService.cbAi\n            .subscribe(({ resizeDetections, displaySize, expressions, eyes }) => {\n        });\n        this.listEvents = [observer1$, observer2$];\n    }\n    loadedMetaData() {\n        var _a;\n        (_a = this.videoTest) === null || _a === void 0 ? void 0 : _a.nativeElement.play();\n    }\n    listenerPlay() {\n        var _a;\n        const { globalFace } = this.faceApiService;\n        this.overCanvas = globalFace.createCanvasFromMedia((_a = this.videoTest) === null || _a === void 0 ? void 0 : _a.nativeElement);\n        this.renderer2.setProperty(this.overCanvas, 'id', 'new-canvas-over ');\n        this.renderer2.setStyle(this.overCanvas, 'id', 'new-canvas-over ');\n        this.renderer2.appendChild(this.elementRef.nativeElement, this.overCanvas);\n    }\n    playVideo() {\n        console.log(\"************ Play Video ************\");\n        const myVideo = document.getElementById(\"videoTest\");\n        if (myVideo.paused) {\n            myVideo.play();\n        }\n        else {\n            myVideo.pause();\n        }\n    }\n};\n__decorate([\n    ViewChild('videoTest')\n], VideoComponent.prototype, \"videoTest\", void 0);\n__decorate([\n    Input\n], VideoComponent.prototype, \"stream\", void 0);\n__decorate([\n    Input()\n], VideoComponent.prototype, \"width\", void 0);\n__decorate([\n    Input()\n], VideoComponent.prototype, \"height\", void 0);\nVideoComponent = __decorate([\n    Component({\n        selector: 'app-video',\n        templateUrl: './video.component.html'\n    })\n], VideoComponent);\nexport { VideoComponent };\n"]},"metadata":{},"sourceType":"module"}